<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD iBatis Mapper 3.0 //EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.comichentai.dao.JumpDao">
    <!-- 默认模板生成 添加单行记录 -->
    <insert id="insertJump">INSERT INTO `Jump`
        (`specialId`,`comicId`,
        <!--<if test="可以为空字段!=null and 可以为空字段!=''"> `可以为空字段`, </if>-->
        `status`, `isDeleted`, `created`, `updated`)
        VALUES
        (#{specialId},#{comicId},
        <!--<if test="可以为空字段!=null and 可以为空字段!=''"> #{可以为空字段}, </if>-->
        #{status}, 0, UNIX_TIMESTAMP(), UNIX_TIMESTAMP());
        <selectKey resultType="integer" keyProperty="id">SELECT LAST_INSERT_ID()</selectKey>
    </insert>
    <!-- 默认模板生成 更新单行记录 -->
    <update id="updateJump">UPDATE `Jump`
        <set>
            <if test="specialId!=null and specialId!=''">`specialId` = #{specialId},</if>
            <if test="comicId!=null and comicId!=''">`comicId` = #{comicId},</if>

            <if test="status!=null and status!=''">`status` = #{status},</if>
            updated = UNIX_TIMESTAMP()
        </set>
        <where>id = #{id}</where>
        LIMIT 1
    </update>
    <!-- 默认模板生成 更新多行记录 -->
    <update id="batchUpdateJump">UPDATE `Jump`
        <set>
            <if test="data.specialId!=null and data.specialId!=''">`specialId` = #{data.specialId},</if>
            <if test="data.comicId!=null and data.comicId!=''">`comicId` = #{data.comicId},</if>

            <if test="data.status!=null and data.status!=''">`status` = #{data.status},</if>
        </set>
        <where>
            <foreach collection="idList" item="id" separator=" or ">id = #{id}</foreach>
        </where>
        LIMIT ${idList.size}
    </update>
    <!-- 默认模板生成 删除单行记录-->
    <update id="deleteJump"> UPDATE `Jump`
    SET isDeleted = 1, updated = UNIX_TIMESTAMP()
    WHERE id = ${id}
    LIMIT 1 </update>
    <!-- 默认模板生成 删除多行记录-->
    <update id="batchDeleteJump">UPDATE `Jump` SET isDeleted = 1,updated = UNIX_TIMESTAMP()
        <where>
            <foreach collection="idList" item="id" separator=" or ">id = #{id}</foreach>
        </where>
        LIMIT ${idList.size}
    </update>
    <!-- 默认模板生成 根据ID选取单行记录 -->
    <select id="selectJumpById" resultType="com.comichentai.dataobject.JumpDo"> SELECT *
                                                                                FROM `Jump`
                                                                                WHERE id = ${id}
                                                                                LIMIT 1 </select>
    <!-- 默认模板生成 根据ID集合选取多行记录-->
    <select id="selectJumpListByIds" resultType="com.comichentai.dataobject.JumpDo">SELECT * FROM `Jump`
        <where>
            id in (
            <foreach collection="idList" item="id" separator=" , ">#{id}</foreach>
            )
        </where>
        LIMIT ${idList.size}
    </select>
    <!-- 默认模板生成 动态SQL语句 通常字段判断是否为空 并增加日期范围 -->
    <sql id="where">
        <where>1 = 1
            <if test="specialId!=null and specialId!=''">AND `specialId` = #{specialId}</if>
            <if test="comicId!=null and comicId!=''">AND `comicId` = #{comicId}</if>

            <!--<if test="模糊查询字段!=null and 模糊查询字段!=''"> AND`模糊查询字段` LIKE concat('%',#{模糊查询字段},'%') </if>-->
            <if test="createdAfter!=null and createdAfter!=''">AND `created` &lt; #{createdAfter}</if>
            <if test="createdBefore!=null and createdBefore!=''">AND `created` &gt; #{createdBefore}</if>
            <if test="updatedAfter!=null and updatedAfter!=''">AND `updated` &lt; #{updatedAfter}</if>
            <if test="updatedBefore!=null and updatedBefore!=''">AND `updated` &gt; #{updatedBefore}</if>
            <if test="status!=null and status!=''">AND `status` = #{status}</if>
            <if test="isDeleted!=null and isDeleted!=''">AND `isDeleted` = #{isDeleted}</if>
        </where>
    </sql>
    <!-- 默认模板生成 根据Query对象查询记录 -->
    <select id="selectJumpListByQuery" resultType="com.comichentai.dataobject.JumpDo"
            parameterType="com.comichentai.dto.JumpDto">SELECT * FROM `Jump`
        <include refid="where"/>
        ORDER BY `created` DESC
        <if test="limit!=null and limit!=''">LIMIT
            <if test="offset!=null and offset!=''">#{offset},</if>
            #{limit}
        </if>
    </select>
    <!-- 默认模板生成 根据Query对象查询符合条件的个数 -->
    <select id="selectJumpCountByQuery" resultType="Integer" parameterType="com.comichentai.dataobject.JumpDo">SELECT
        count(*) FROM `Jump`
        <include refid="where"/>
    </select>
</mapper>
    